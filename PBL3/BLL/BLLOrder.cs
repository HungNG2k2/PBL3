using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using PBL3.DTO;

namespace PBL3.BLL
{
    public class BLLOrder : BLLInterface<Order>
    {
        QLCHTAN db = new QLCHTAN();
        private static BLLOrder _Instance;

        public static BLLOrder Instance
        {
            get
            {
                if (_Instance == null)
                {
                    _Instance = new BLLOrder();
                }
                return _Instance;
            }
            private set { }
        }
        private BLLOrder()
        {

        }
        public bool checkAddUpdate(string id)
        {
            bool Add = true;
            if(db.Order.Find(id) != null)
            {
                Add = false;
            }
            return Add;
        }

        public void Delete(string id)
        {
            db.Order.Remove(db.Order.Find(id));
            db.SaveChanges();
        }
        public string AutoGeneratedId()
        {
            string id_next = "";
            string id_max = db.Order.Select(p => p.id_Order).ToList().Max();
            if (id_max == null)
            {
                id_next = "OD001";
            }
            else
            {
                int max = Convert.ToInt32(id_max.Substring(id_max.Length - 3));
                max++;
                id_next = "OD" + ("000" + max).Substring(("000" + max).Length - 3);
            }
            return id_next;
        }
        public void ExecuteAddUpdate(Order t)
        {
            if (checkAddUpdate(t.id_Order))
            {
                db.Order.Add(new Order
                {
                    id_Order = t.id_Order,
                    id_KhachHang = t.id_KhachHang,
                    id_NhanVien = t.id_NhanVien,
                    TongNhap = t.TongNhap,
                    TongTien = t.TongTien,
                });
                db.SaveChanges();
            }
            else
            {
                Order od = db.Order.Find(t.id_Order);
                od.id_KhachHang = t.id_KhachHang;
                od.id_NhanVien = t.id_NhanVien;
                od.TongNhap = t.TongNhap;
                od.TongTien = t.TongTien;
                db.SaveChanges();
            }
        }

        public dynamic GetAll()
        {
            return db.Order.Select(p => new {p.id_Order, p.NhanVien, p.KhachHang, p.TongNhap, p.TongTien}).ToList();
        }

        public Order GetById(string id)
        {
            return db.Order.Find(id);
        }
    }
}
